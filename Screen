import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JComponent;

public class Screen extends JComponent{

	private static final long serialVersionUID = 1L;
	
	double T;
	int q = 0;
	Random rand = new Random();
	
	private ArrayList<GameObject> objects = new ArrayList<GameObject>();
	
	public Screen(double T) {
		objects.add(new Player(new Rectangle(100,300,30,50,new Vector(50,-125),new Vector(0,40),0,-25,4,5), Color.PINK));
		objects.add(new Player(new Rectangle(200,250,120,60,new Vector(65,-85),new Vector(0,20),0,-10,2,5), Color.GREEN));
		objects.add(new Player(new Rectangle(300,450,200,10,new Vector(285,-145),new Vector(-50,30),0,8,-1.5,5), Color.YELLOW));
		this.T=T;
	}
	
	public void paint(Graphics g) {
		q++;
		if(q%((1/T))==0) {
			objects.add(new Player(new Rectangle(rand.nextInt(1600),rand.nextInt(900),rand.nextInt(300),rand.nextInt(300),new Vector(rand.nextInt(300)-rand.nextInt(300),rand.nextInt(300)-rand.nextInt(300)),new Vector(rand.nextInt(100)-rand.nextInt(100),rand.nextInt(100)-rand.nextInt(100)),0,rand.nextInt(40)-rand.nextInt(40),rand.nextInt(5)-rand.nextInt(5),1), Color.getHSBColor(rand.nextFloat(),rand.nextFloat(),rand.nextFloat())));
		}
		for(int i=0;i<objects.size();i++) {
			g.setColor(objects.get(i).getColor());
			g.fillPolygon(objects.get(i).getTexture());
		}
		
	}
	
	public void addObject(GameObject a) {
		objects.add(a);
	}
	
	public void update() {
		for(int i=0;i<objects.size();i++) {
			objects.get(i).updatePhysics(T);
		}
	}

}
